// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User model for admin authentication
model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  password      String
  image         String?
  role          String    @default("user") // "user" or "admin"
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relations
  articles      Article[]
}

// Article model for blog posts
model Article {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  slug           String     @unique
  excerpt        String
  content        String
  featuredImage  String?
  published      Boolean    @default(false)
  publishedAt    DateTime?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  viewCount      Int        @default(0)
  
  // Relations
  author         User       @relation(fields: [authorId], references: [id])
  authorId       String     @db.ObjectId
  categories     Category[] @relation(fields: [categoryIds], references: [id])
  categoryIds    String[]   @db.ObjectId
  tags           String[]
}

// Category model for organizing articles
model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  slug        String    @unique
  description String?
  image       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  articles    Article[] @relation(fields: [articleIds], references: [id])
  articleIds  String[]  @db.ObjectId
}

// Comment model for article comments
model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  name      String
  email     String
  approved  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  articleId String   @db.ObjectId
}
